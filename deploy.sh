#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞
set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –ú–ï–¢–†–ò–ö–°..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ env.example –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    echo "   cp env.example .env"
    echo "   nano .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ CSV —Ñ–∞–π–ª–∞
if [ ! -f "store-7407308-202509021623.csv" ]; then
    echo "‚ùå CSV —Ñ–∞–π–ª —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "üìÅ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª store-7407308-202509021623.csv –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p logs
mkdir -p /var/log/metriks 2>/dev/null || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å /var/log/metriks (–Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ root)"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
if [ -d "env" ]; then
    source env/bin/activate
    pip install -r requirements.txt
else
    echo "‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
    echo "üîß –°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:"
    echo "   python -m venv env"
    echo "   source env/bin/activate"
    echo "   pip install -r requirements.txt"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
python -c "
import os
from dotenv import load_dotenv
load_dotenv()

required_vars = [
    'TELEGRAM_BOT_TOKEN',
    'TELEGRAM_CHAT_IDS', 
    'SMTP_PASSWORD'
]

missing_vars = []
for var in required_vars:
    if not os.getenv(var):
        missing_vars.append(var)

if missing_vars:
    print(f'‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {missing_vars}')
    exit(1)
else:
    print('‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã')
"

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!"
    exit 1
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
python -c "
from app.main import app
from app.telegram_service import TELEGRAM_SERVICE
print('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
if TELEGRAM_SERVICE:
    print('‚úÖ Telegram —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
else:
    print('‚ö†Ô∏è  Telegram —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
"

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞:"
echo "1) Docker Compose (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)"
echo "2) Systemd service"
echo "3) Gunicorn –Ω–∞–ø—Ä—è–º—É—é"
echo "4) Uvicorn –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"

read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4): " choice

case $choice in
    1)
        echo "üê≥ –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ Docker Compose..."
        docker compose up -d
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ Docker Compose"
        echo "üåê –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost"
        ;;
    2)
        echo "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd service..."
        sudo cp metriks.service /etc/systemd/system/
        sudo systemctl daemon-reload
        sudo systemctl enable metriks
        sudo systemctl start metriks
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∫–∞–∫ systemd service"
        echo "üìä –°—Ç–∞—Ç—É—Å: sudo systemctl status metriks"
        ;;
    3)
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ Gunicorn..."
        gunicorn -c gunicorn.conf.py app.main:app
        ;;
    4)
        echo "üîß –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ Uvicorn (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)..."
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   - –õ–æ–≥–∏: docker-compose logs -f (–¥–ª—è Docker)"
echo "   - –õ–æ–≥–∏: sudo journalctl -u metriks -f (–¥–ª—è systemd)"
echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down (–¥–ª—è Docker)"
echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: sudo systemctl stop metriks (–¥–ª—è systemd)"
